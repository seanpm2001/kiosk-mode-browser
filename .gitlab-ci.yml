image: docker:latest

variables:
  KIOSK_MODE_BROWSER_MAJOR: "1"
  KIOSK_MODE_BROWSER_MINOR: "0"
  KIOSK_MODE_BROWSER_PATCH: "0"
  
  KIOSK_MODE_BROWSER_X11_MAJOR: "1"
  KIOSK_MODE_BROWSER_X11_MINOR: "0"
  KIOSK_MODE_BROWSER_X11_PATCH: "0"  
  
  # This should be set by docker image already, just to be sure...
  DOCKER_HOST: tcp://docker:2375
  # Use overlayfs driver for better performance
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  GITLAB_DOCKERREGISTRY_SUFFIX: ${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}
  GITLAB_DOCKERREGISTRY_SUFFIX_LATEST: ${CI_COMMIT_REF_SLUG}-latest


services:
  - name: docker:dind

before_script:
  - docker info

stages:
  - build-kiosk-mode-browser
  - build-kiosk-mode-browser-multiarch
  - deploy-major
  - deploy-minor
  - deploy-patch
  - deploy-patch-date
  - deploy-multiarch-major
  - deploy-multiarch-minor
  - deploy-multiarch-patch
  - deploy-multiarch-patch-date

# Docker image builds
#
# Build the Docker images  specificd in DOCKERFILE_FOLDER/IMAGE_NAME and push
# it to Gitlab's internal Docker registry
.docker-build:
  variables:
    BUILD_TYPE: wayland
  script:
    # Try to download latest image for cache, but don't fail if it does not exist
    - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} || true
    - export DATE=$(date +%Y%m%d)
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --build-arg BUILD_TYPE=${BUILD_TYPE} 
                     --build-arg BASE_IMAGE=${BASE_IMAGE} 
                     --cache-from ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} 
                     ${DOCKER_NO_CACHE:+--no-cache} 
                     --label container.name=${IMAGE_NAME} 
                     --label container.version=${MAJOR}.${MINOR}.${PATCH}-${DATE} 
                     --label git.branch=${CI_COMMIT_BRANCH} 
                     --label git.hash=${CI_COMMIT_SHA} 
                     --label pipeline.id=${CI_PIPELINE_ID} 
                     -f ${DOCKERFILE_FOLDER}Dockerfile 
                     -t ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} 
                     -t ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} 
                     ${DOCKERFILE_FOLDER}
    - docker push ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
    - docker push ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST}

docker-build-kiosk-mode-browser:
  extends: .docker-build
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"
    - export PATCH="${KIOSK_MODE_BROWSER_PATCH}"
  variables:
    BASE_IMAGE: torizon/arm32v7-debian-wayland-base
    IMAGE_NAME: arm32v7-debian-kiosk-mode-browser
    DOCKERFILE_FOLDER: "./"
    DOCKER_NO_CACHE: ${DOCKER_NO_CACHE_FEEDS}
  stage: build-kiosk-mode-browser

docker-build-kiosk-mode-browser-x11:
  extends: .docker-build
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_X11_MAJOR}"
    - export MINOR="${KIOSK_MODE_BROWSER_X11_MINOR}"
    - export PATCH="${KIOSK_MODE_BROWSER_X11_PATCH}"
  variables:
    BASE_IMAGE: torizon/arm32v7-debian-base
    IMAGE_NAME: kiosk-mode-browser-x11
    BUILD_TYPE: x11
    DOCKERFILE_FOLDER: "./"
    DOCKER_NO_CACHE: ${DOCKER_NO_CACHE_FEEDS}
  stage: build-kiosk-mode-browser

docker-build-kiosk-mode-browser-arm64:
  extends: .docker-build
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"
    - export PATCH="${KIOSK_MODE_BROWSER_PATCH}"
  variables:
    BASE_IMAGE: torizon/arm64v8-debian-wayland-base
    IMAGE_NAME: arm64v8-debian-kiosk-mode-browser
    DOCKERFILE_FOLDER: "./"
    DOCKER_NO_CACHE: ${DOCKER_NO_CACHE_FEEDS}
  stage: build-kiosk-mode-browser

#docker-build-kiosk-mode-browser-arm64-vivante:
#  extends: .docker-build
#  variables:
#    BASE_IMAGE: torizon/arm64v8-debian-wayland-base-vivante
#    IMAGE_NAME: arm64v8-debian-kiosk-mode-browser
#    DOCKERFILE_FOLDER: "./"
#  stage: build-kiosk-mode-browser

# Enable experimental features in Docker client (experimental feature are needed for manifest)
.do_docker_experimental: &do_docker_experimental
    - mkdir -p $HOME/.docker
    - "echo -e '{\n  \"experimental\": \"enabled\"\n}' | tee $HOME/.docker/config.json"
    - docker version

.docker-build-multiarch:
  before_script:
    - *do_docker_experimental
    - rm -rf ~/.docker/manifests/*
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_32}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_64}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker manifest create ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_32}:${GITLAB_DOCKERREGISTRY_SUFFIX} ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_64}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker manifest annotate ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_32}:${GITLAB_DOCKERREGISTRY_SUFFIX}  --os linux --arch arm
  - docker manifest annotate ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST} ${CI_REGISTRY_IMAGE}/${IMAGE_NAME_64}:${GITLAB_DOCKERREGISTRY_SUFFIX}  --os linux --arch arm64
  - docker manifest inspect -v ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST}
  - docker manifest push ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX_LATEST}

docker-build-kiosk-mode-browser-multiarch:
  extends: .docker-build-multiarch
  variables:
    IMAGE_NAME: kiosk-mode-browser
    IMAGE_NAME_32: arm32v7-debian-kiosk-mode-browser
    IMAGE_NAME_64: arm64v8-debian-kiosk-mode-browser
  stage: build-kiosk-mode-browser-multiarch

# Docker deploy jobs
#
# Make sure DOCKER_HUB_USER/DOCKER_HUB_PW is properly set in the project
# specific Gitlab CI settings.
.docker-deploy-major:
  when: manual
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker tag ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}

docker-deploy-kiosk-mode-browser-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"
  variables:
    IMAGE_NAME: arm32v7-debian-kiosk-mode-browser
  stage: deploy-major

docker-deploy-kiosk-mode-browser-x11-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_X11_MAJOR}"  
  variables:
    IMAGE_NAME: kiosk-mode-browser-x11
  stage: deploy-major

docker-deploy-kiosk-mode-browser-arm64-major:
  extends: .docker-deploy-major
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"  
  variables:
    IMAGE_NAME: arm64v8-debian-kiosk-mode-browser
  stage: deploy-major

.docker-deploy-minor:
  when: manual
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker tag ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}
  
docker-deploy-kiosk-mode-browser-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"
  variables:
    IMAGE_NAME: arm32v7-debian-kiosk-mode-browser
  stage: deploy-minor

docker-deploy-kiosk-mode-browser-x11-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_X11_MAJOR}"  
    - export MINOR="${KIOSK_MODE_BROWSER_X11_MINOR}"  
  variables:
    IMAGE_NAME: kiosk-mode-browser-x11
  stage: deploy-minor

docker-deploy-kiosk-mode-browser-arm64-minor:
  extends: .docker-deploy-minor
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"  
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"  
  variables:
    IMAGE_NAME: arm64v8-debian-kiosk-mode-browser
  stage: deploy-minor
  
.docker-deploy-patch:
  when: manual
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker tag ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}
  
docker-deploy-kiosk-mode-browser-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"
    - export PATCH="${KIOSK_MODE_BROWSER_PATCH}"
  variables:
    IMAGE_NAME: arm32v7-debian-kiosk-mode-browser
  stage: deploy-patch

docker-deploy-kiosk-mode-browser-x11-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_X11_MAJOR}"  
    - export MINOR="${KIOSK_MODE_BROWSER_X11_MINOR}"  
    - export PATCH="${KIOSK_MODE_BROWSER_X11_PATCH}"  
  variables:
    IMAGE_NAME: kiosk-mode-browser-x11
  stage: deploy-patch

docker-deploy-kiosk-mode-browser-arm64-patch:
  extends: .docker-deploy-patch
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"  
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"  
    - export PATCH="${KIOSK_MODE_BROWSER_PATCH}"  
  variables:
    IMAGE_NAME: arm64v8-debian-kiosk-mode-browser
  stage: deploy-patch  

.docker-deploy-patch-date:
  when: manual
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - export DATE=$(date +%Y%m%d)
  - docker pull ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX}
  - docker tag ${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${GITLAB_DOCKERREGISTRY_SUFFIX} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}
  
docker-deploy-kiosk-mode-browser-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"
    - export PATCH="${KIOSK_MODE_BROWSER_PATCH}"
  variables:
    IMAGE_NAME: arm32v7-debian-kiosk-mode-browser
  stage: deploy-patch-date

docker-deploy-kiosk-mode-browser-x11-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_X11_MAJOR}"  
    - export MINOR="${KIOSK_MODE_BROWSER_X11_MINOR}"  
    - export PATCH="${KIOSK_MODE_BROWSER_X11_PATCH}"  
  variables:
    IMAGE_NAME: kiosk-mode-browser-x11
  stage: deploy-patch-date

docker-deploy-kiosk-mode-browser-arm64-patch-date:
  extends: .docker-deploy-patch-date
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"  
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"  
    - export PATCH="${KIOSK_MODE_BROWSER_PATCH}"  
  variables:
    IMAGE_NAME: arm64v8-debian-kiosk-mode-browser
  stage: deploy-patch-date    

.docker-deploy-multiarch-major:
  when: manual    
  script:
  - *do_docker_experimental
  - rm -rf ~/.docker/manifests/*
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker manifest create ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR} --os linux --arch arm
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR} --os linux --arch arm64
  - docker manifest inspect -v ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}
  - docker manifest push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}
  
docker-deploy-kiosk-mode-browser-multiarch-major:
  extends: .docker-deploy-multiarch-major
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"  
  variables:
    IMAGE_NAME: kiosk-mode-browser
    IMAGE_NAME_32: arm32v7-debian-kiosk-mode-browser
    IMAGE_NAME_64: arm64v8-debian-kiosk-mode-browser
  stage: deploy-multiarch-major  

.docker-deploy-multiarch-minor:
  when: manual    
  script:
  - *do_docker_experimental
  - rm -rf ~/.docker/manifests/*
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker manifest create ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}  --os linux --arch arm
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}  --os linux --arch arm64
  - docker manifest inspect -v ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}
  - docker manifest push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}
  
docker-deploy-kiosk-mode-browser-multiarch-minor:
  extends: .docker-deploy-multiarch-minor
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"  
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"  
  variables:
    IMAGE_NAME: kiosk-mode-browser
    IMAGE_NAME_32: arm32v7-debian-kiosk-mode-browser
    IMAGE_NAME_64: arm64v8-debian-kiosk-mode-browser
  stage: deploy-multiarch-minor  
  
.docker-deploy-multiarch-patch:
  when: manual
  script:
  - *do_docker_experimental
  - rm -rf ~/.docker/manifests/*
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - docker manifest create ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}.${PATCH} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}.${PATCH}
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}.${PATCH} --os linux --arch arm
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}.${PATCH} --os linux --arch arm64
  - docker manifest inspect -v ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}
  - docker manifest push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}
  
docker-deploy-kiosk-mode-browser-multiarch-patch:
  extends: .docker-deploy-multiarch-patch
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"  
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"  
    - export PATCH="${KIOSK_MODE_BROWSER_PATCH}"  
  variables:
    IMAGE_NAME: kiosk-mode-browser
    IMAGE_NAME_32: arm32v7-debian-kiosk-mode-browser
    IMAGE_NAME_64: arm64v8-debian-kiosk-mode-browser
  stage: deploy-multiarch-patch  
  
.docker-deploy-multiarch-patch-date:
  when: manual
  script:
  - *do_docker_experimental
  - rm -rf ~/.docker/manifests/*
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PW
  - export DATE=$(date +%Y%m%d)
  - docker manifest create ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}.${PATCH}-${DATE} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}.${PATCH}-${DATE}
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_32}:${MAJOR}.${MINOR}.${PATCH}-${DATE}  --os linux --arch arm
  - docker manifest annotate ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE} ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME_64}:${MAJOR}.${MINOR}.${PATCH}-${DATE}  --os linux --arch arm64
  - docker manifest inspect -v ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}
  - docker manifest push ${DOCKER_HUB_REPOSITORY}/${IMAGE_NAME}:${MAJOR}.${MINOR}.${PATCH}-${DATE}
  
docker-deploy-kiosk-mode-browser-multiarch-patch-date:
  extends: .docker-deploy-multiarch-patch-date
  before_script:
    - export MAJOR="${KIOSK_MODE_BROWSER_MAJOR}"  
    - export MINOR="${KIOSK_MODE_BROWSER_MINOR}"  
    - export PATCH="${KIOSK_MODE_BROWSER_PATCH}"  
  variables:
    IMAGE_NAME: kiosk-mode-browser
    IMAGE_NAME_32: arm32v7-debian-kiosk-mode-browser
    IMAGE_NAME_64: arm64v8-debian-kiosk-mode-browser
  stage: deploy-multiarch-patch-date 